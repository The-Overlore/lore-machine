name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up poetry environment
        uses: ./.github/actions/setup-poetry-env

      - name: Load cached mod_libspatialite
        id: cached-mod_libspatialite
        uses: actions/cache@v3
        with:
          path: /mod_spatialite.so
          key: venv-${{ runner.os }}-mod_spatialite

      - name: Install mod_libspatialite
        if: steps.cached-mod_libspatialite.outputs.cache-hit != 'true'
        run: sudo apt-get update -y && sudo apt-get install -y libsqlite3-mod-spatialite && cp $(sudo find / -name mod_spatialite.so) /
        shell: bash

      - name: Add mod_libspatialite.so to libpath
        run: echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/mod_spatialite.so" >> ~/.bashrc

      - name: Run tests
        run: make test

  format-and-typing:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up poetry environment
        uses: ./.github/actions/setup-poetry-env

      - name: Run checks
        run: make check
